<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--配置监听器，在web容器初始化的时候 一起初始化spring容器-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>


    <!--配置前端请求接收器，实质就是配置servlet-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:context/spring-mvc-freemarker.xml</param-value>
        </init-param>

        <!--load-on-startup 元素标记容器是否应该在启动的时候加载这个servlet，(实例化并调用其init()方法)。-->
        <!--它的值必须是一个整数，表示servlet应该被载入的顺序 。正数的值越小，该servlet的优先级越高，应用启动时就越先加载。负数则不会加载-->
        <load-on-startup>0</load-on-startup>
    </servlet>

    <!--配置servlet映射-->
    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!-- / 会拦截所有请求，但是不会拦截jsp请求 http://localhost:8080/hello.jsp不会被拦截 http://localhost:8080/Views/hello.jsp会被拦截-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <error-page>
        <error-code>404</error-code>
        <location>/hello</location>
    </error-page>

</web-app>